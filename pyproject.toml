[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "aviary"
version = "1.2.0"
description = "A collection of machine learning models for materials discovery"
authors = [{ name = "Rhys Goodall", email = "rhys.goodall@outlook.com" }]
readme = "README.md"
license = { file = "license" }
keywords = [
  "Graph Neural Network",
  "Machine Learning",
  "Materials Discovery",
  "Materials Informatics",
  "Materials Science",
  "Roost",
  "Self-Attention",
  "Transformer",
  "Wren",
  "Wyckoff positions",
]
classifiers = [
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Chemistry",
  "Topic :: Scientific/Engineering :: Physics",
]

requires-python = ">=3.10"
dependencies = [
  "numpy>=2,<3",
  "pandas",
  "pymatgen>=2025.4.10",
  "scikit_learn",
  "tensorboard",
  "torch>=2.3.0",
  "tqdm",
  "typing-extensions",
  "wandb",
]

[project.urls]
Repo = "https://github.com/CompRhys/aviary"

[project.optional-dependencies]
test = ["matminer", "moyopy>=0.3.3", "pytest", "pytest-cov"]
moyopy = ["moyopy>=0.3.3"]

[tool.hatch.build.targets.wheel]
packages = ["aviary"]

[tool.hatch.build]
include = [
  "aviary/**/*.py",
  "aviary/**/*.json",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:warnings"

[tool.mypy]
no_implicit_optional = false

[tool.ruff]
line-length = 90
target-version = "py310"
output-format = "concise"

[tool.ruff.lint]
select = [
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "D",    # pydocstyle
  "E",    # pycodestyle error
  "EXE",  # flake8-executable
  "F",    # pyflakes
  "FA",   # flake8-future-annotations
  "FLY",  # flynt
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "PD",   # pandas-vet
  "PERF", # perflint
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PYI",  # flakes8-pyi
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # Ruff-specific rules
  "SIM",  # flake8-simplify
  "SLOT", # flake8-slots
  "TCH",  # flake8-type-checking
  "TID",  # tidy imports
  "TID",  # flake8-tidy-imports
  "UP",   # pyupgrade
  "W",    # pycodestyle warning
  "YTT",  # flake8-2020
]
ignore = [
  "C408",   # Unnecessary dict call - rewrite as a literal
  "D100",   # Missing docstring in public module
  "D104",   # Missing docstring in public package
  "D105",   # Missing docstring in magic method
  "D205",   # 1 blank line required between summary line and description
  "E731",   # Do not assign a lambda expression, use a def
  "ISC001",
  "PD901",  # pandas-df-variable-name
  "PLR",    # pylint refactor
  "PT006",  # pytest-parametrize-names-wrong-type
]
pydocstyle.convention = "google"
isort.known-third-party = ["wandb"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]
"examples/notebooks/*.py" = ["E402"]
